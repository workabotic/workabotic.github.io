class BankAccount:
    def __init__(self, account_holder, initial_balance=0):
        self.account_holder = account_holder
        self.__balance = initial_balance  # Encapsulation: Balance is private

    def deposit(self, amount):
        if amount > 0:
            self.__balance += amount
            print(f"Deposited ${amount:.2f}. New balance: ${self.__balance:.2f}")
        else:
            print("Deposit amount must be positive.")

    def withdraw(self, amount):
        if 0 < amount <= self.__balance:
            self.__balance -= amount
            print(f"Withdrew ${amount:.2f}. New balance: ${self.__balance:.2f}")
        else:
            print("Insufficient funds or invalid amount.")

    def check_balance(self):
        return f"Current balance: ${self.__balance:.2f}"

def main():
    # Create a BankAccount object
    account = BankAccount("John Doe", 1000)

    # Display initial balance
    print(account.check_balance())

    # Deposit and withdraw funds
    account.deposit(500)
    account.withdraw(200)
    
    # Check final balance
    print(account.check_balance())

if __name__ == "__main__":
    main()
