section .bss
    input resb 100         ; Reserve 100 bytes for the input string

section .data
    prompt db 'Enter a string: ', 0
    prompt_len equ $ - prompt
    newline db 10, 0       ; Newline character

section .text
    global _start

_start:
    ; Print prompt
    mov eax, 4             ; sys_write system call number
    mov ebx, 1             ; File descriptor 1 (stdout)
    mov ecx, prompt        ; Pointer to the prompt string
    mov edx, prompt_len    ; Length of the prompt string
    int 0x80               ; Call kernel

    ; Read input
    mov eax, 3             ; sys_read system call number
    mov ebx, 0             ; File descriptor 0 (stdin)
    mov ecx, input         ; Pointer to the input buffer
    mov edx, 100           ; Maximum number of bytes to read
    int 0x80               ; Call kernel

    ; Print newline
    mov eax, 4             ; sys_write system call number
    mov ebx, 1             ; File descriptor 1 (stdout)
    mov ecx, newline       ; Pointer to the newline character
    mov edx, 1             ; Length of the newline character
    int 0x80               ; Call kernel

    ; Print input
    mov eax, 4             ; sys_write system call number
    mov ebx, 1             ; File descriptor 1 (stdout)
    mov ecx, input         ; Pointer to the input buffer
    mov edx, 100           ; Number of bytes to write
    int 0x80               ; Call kernel

    ; Exit the program
    mov eax, 1             ; sys_exit system call number
    xor ebx, ebx           ; Exit code 0
    int 0x80               ; Call kernel